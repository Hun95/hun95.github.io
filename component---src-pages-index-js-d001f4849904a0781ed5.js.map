{"version":3,"sources":["webpack:///./node_modules/reactstrap/es/CardTitle.js","webpack:///./node_modules/reactstrap/es/CardText.js","webpack:///./src/components/Post.js","webpack:///./src/components/Footer.js","webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["props","className","cssModule","Tag","tag","attributes","classes","createElement","defaultProps","Post","title","slug","date","body","fluid","tags","Card","to","CardBody","CardSubtitle","Footer","href","target","rel","class","indexQuery","IndexPage","Row","Col","md","query","render","data","allMdx","edges","map","node","key","fields","frontmatter","excerpt","image","childImageSharp","style","width","height","backgroundColor","SEO","description","lang","meta","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","concat"],"mappings":"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","file":"component---src-pages-index-js-d001f4849904a0781ed5.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.defaultProps = defaultProps;\nexport default CardText;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport {\n  Card,\n  CardTitle,\n  CardText,\n  CardSubtitle,\n  CardBody,\n  Badge,\n} from \"reactstrap\";\nimport Img from \"gatsby-image\";\n\nconst Post = ({ title, slug, date, body, fluid, tags }) => {\n  return (\n    <Card>\n      <Link to={slug}>\n        <Img className=\"card-image-top\" fluid={fluid} />\n      </Link>\n      <CardBody>\n        <Link to={slug}>\n          <CardTitle>{title}</CardTitle>\n        </Link>\n        <CardSubtitle>\n          <span className=\"text-info\">{date}</span> by{\" \"}\n        </CardSubtitle>\n\n        <CardText>{body}</CardText>\n        {/* <ul className=\"post-tags\">\n          {tags.map(tag => (\n            <li>\n              <Link to={`/tag/${tag}`}>\n                <Badge color=\"primary\" className=\"text-uppercase\">\n                  {tag}\n                </Badge>\n              </Link>\n            </li>\n          ))}\n        </ul> */}\n        <Link to={slug} className=\"btn btn-outline-primary float-right\">\n          Read More\n        </Link>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Post;\n","import React from \"react\"\n\nconst Footer = () => (\n  <div className=\"site-footer\">\n    <h4 className=\"text-center\">수염난친구</h4>\n    <p className=\"text-center\">소셜</p>\n    <div className=\"footer-social-links\">\n      <ul className=\"social-links-list\">\n        <li>\n          <a href=\"https://www.facebook.com\" target=\"_blank\" rel=\"noreferrer\">\n            <i class=\"fab fa-facebook-f fa-2x\"></i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n)\n\nexport default Footer\n","import React from \"react\";\nimport { graphql, StaticQuery } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport Post from \"../components/Post\";\nimport SEO from \"../components/seo\";\n// import SideBar from \"../components/Sidebar\";\nimport Footer from \"../components/Footer\";\nimport { Row, Col } from \"reactstrap\";\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <h1>홈</h1>\n    <Row>\n      <Col md=\"8\">\n        <StaticQuery\n          query={indexQuery}\n          render={data => {\n            return (\n              <div>\n                {data.allMdx.edges.map(({ node }) => (\n                  <Post\n                    key={node.fields.slug}\n                    title={node.frontmatter.title}\n                    slug={node.fields.slug}\n                    date={node.frontmatter.date}\n                    body={node.excerpt}\n                    fluid={node.frontmatter.image.childImageSharp.fluid}\n                    tags={node.frontmatter.tags}\n                  />\n                ))}\n              </div>\n            );\n          }}\n        />\n      </Col>\n      <Col md=\"4\">\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0,0,0,0.4)\",\n          }}\n        >\n          {/* <SideBar></SideBar> */}\n        </div>\n      </Col>\n    </Row>\n    <Footer />\n  </Layout>\n);\n\nconst indexQuery = graphql`\n  query {\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          id\n          body\n          frontmatter {\n            title\n            date(formatString: \"MMM Do YYYY\")\n\n            tags\n            image {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}