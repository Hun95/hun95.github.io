{"version":3,"sources":["webpack:///./src/components/Seo.js","webpack:///./src/components/Post-in-tags.js","webpack:///./src/components/Post.js","webpack:///./src/components/Footer.js","webpack:///./src/components/styles/Styled.js","webpack:///./src/pages/index.js"],"names":["SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","PostInTags","props","map","tag","Tag","to","styled","Link","Post","edges","allMdx","node","Card","CardTitle","fields","slug","frontmatter","className","date","excerpt","tags","div","Footer","href","target","rel","HeroContainer","HeroContent","video","h1","p","IndexPage","Layout"],"mappings":"6FAAA,iDAYA,SAASA,EAAT,GAAkD,IAAD,EAAlCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9BC,EAASC,yBAAe,cAAxBD,KAaFE,EAAkBN,GAAeI,EAAKG,aAAaP,YACnDQ,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBJ,MAExC,OACE,kBAAC,IAAD,CACEM,eAAgB,CACdR,QAEFE,MAAOA,EACPO,cAAeF,EAAY,QAAWA,EAAiB,KACvDN,KAAM,CACJ,CACES,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAAST,GAEX,CACEU,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAGV,CACED,KAAK,gBACLC,QAAST,GAEX,CACEQ,KAAK,sBACLC,QAASN,IAEXQ,OAAOZ,KAKfH,EAAIgB,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,O,wTCjFf,IAUeiB,EAVI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpB,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAG,OACZ,kBAACC,EAAD,CAAKC,GAAE,OAASF,GAAQA,QAQ1BC,EAAME,YAAOC,OAAPD,CAAH,K,mWCVT,IAmDeE,EAnDF,WACX,IA6BMC,EA7BOpB,yBAAe,cA6BTqB,OAAOD,MAE1B,OACE,oCACGA,EAAMP,KAAI,gBAAGS,EAAH,EAAGA,KAAH,OACT,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,OAAD,CAAMR,GAAIM,EAAKG,OAAOC,MAAOJ,EAAKK,YAAY7B,QAGhD,0BAAM8B,UAAU,aAAaN,EAAKK,YAAYE,MAE7CP,EAAKQ,QAEN,kBAAC,EAAD,CAAYlB,MAAOU,EAAKK,YAAYI,aASxCR,EAAON,IAAOe,IAAV,KAQJR,EAAYP,IAAOe,IAAV,K,YC9CAC,EAlBA,kBACb,yBAAKL,UAAU,eACb,wBAAIA,UAAU,eAAd,SACA,uBAAGA,UAAU,eAAb,MACA,yBAAKA,UAAU,uBACb,wBAAIA,UAAU,qBACZ,4BACE,uBACEM,KAAK,2BACLC,OAAO,SACPC,IAAI,oB,0tDCVT,IAAMC,EAAgBpB,IAAOe,IAAV,KA2CbM,GAhBSrB,IAAOe,IAAV,KAUIf,IAAOsB,MAAV,KAMOtB,IAAOe,IAAV,MAMCf,IAAOe,IAAV,KAaAf,IAAOuB,GAAV,KAOEvB,IAAOwB,EAAV,KCfHC,UA/CG,kBAChB,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAK7C,MAAM,SACX,uOAMA,kBAAC,EAAD,MACA,kBAACuC,EAAD,KACE,kBAACC,EAAD,eAEF,kBAAC,EAAD","file":"component---src-pages-index-js-292b2d5899c626ea0836.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\nconst PostInTags = ({ props }) => {\n  return (\n    <div>\n      {props.map(tag => (\n        <Tag to={`tag/${tag}`}>{tag}</Tag>\n      ))}\n    </div>\n  );\n};\n\nexport default PostInTags;\n\nconst Tag = styled(Link)`\n  background-color: blue;\n  color: white;\n  margin-right: 1rem;\n  border: none;\n  border-radius: 2rem;\n  padding: 1% 1%;\n`;\n","import React from \"react\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\n\nimport styled from \"styled-components\";\nimport PostInTags from \"../components/Post-in-tags\";\nconst Post = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n        edges {\n          node {\n            id\n\n            frontmatter {\n              title\n              date(formatString: \"YYYY년 MM월 DD일\")\n              tags\n              image {\n                childImageSharp {\n                  fluid(maxWidth: 600) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n            fields {\n              slug\n            }\n            excerpt\n          }\n        }\n      }\n    }\n  `);\n\n  const edges = data.allMdx.edges;\n\n  return (\n    <>\n      {edges.map(({ node }) => (\n        <Card>\n          <CardTitle>\n            <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n          </CardTitle>\n\n          <span className=\"text-info\">{node.frontmatter.date}</span>\n\n          {node.excerpt}\n\n          <PostInTags props={node.frontmatter.tags} />\n        </Card>\n      ))}\n    </>\n  );\n};\n\nexport default Post;\n\nconst Card = styled.div`\n  border: 1px solid gray;\n  padding-bottom: 1rem;\n  margin-bottom: 1rem;\n  max-width: calc(100vh - 40px);\n  min-height: calc(100vh -500px);\n`;\n\nconst CardTitle = styled.div`\n  margin-bottom: 1rem;\n\n  font-size: 30px;\n  font-weight: bold;\n`;\n","import React from \"react\";\n\nconst Footer = () => (\n  <div className=\"site-footer\">\n    <h4 className=\"text-center\">수염난친구</h4>\n    <p className=\"text-center\">소셜</p>\n    <div className=\"footer-social-links\">\n      <ul className=\"social-links-list\">\n        <li>\n          <a\n            href=\"https://www.facebook.com\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          ></a>\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\nexport default Footer;\n","import styled from \"styled-components\";\n\nexport const HeroContainer = styled.div`\n  background: #0c0c0c;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 0 1rem;\n  position: relative;\n\n  color: #fff;\n\n  :before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    z-index: 2;\n    background: linear-gradient(\n        180deg,\n        rgba(0, 0, 0, 0.2) 0%,\n        rgba(0, 0, 0, 0.6) 100%\n      ),\n      linear-gradient(180deg, rgba(0, 0, 0, 0.2), transparent 100%);\n  }\n`;\nexport const HeroBg = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`;\nexport const VideoBg = styled.video`\n  width: 100%;\n  height: 100%;\n  -o-object-fit: cover;\n  object-fit: cover;\n`;\nexport const HeroContent = styled.div`\n  z-index: 3;\n  height: calc(100vh- 80px);\n  max-height: 100%;\n  padding: 0rem calc((100vw - 1300px) / 2);\n`;\nexport const HeroItems = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  height: 100vh;\n  max-height: 100%;\n  padding: 0;\n  color: #fff;\n  line-height: 1.1;\n  font-weight: bold;\n`;\nexport const HeroH1 = styled.h1`\n  font-size: clamp(1.5rem, 6vw, 4rem);\n  margin-bottom: 1.5rem;\n  letter-spacing: 3px;\n  font-weight: bold;\n  padding: 0 1rem;\n`;\nexport const HeroP = styled.p`\n  font-size: clamp(1rem, 3vw, 3rem);\n  margin-bottom: 2rem;\n  font-weight: 400;\n`;\n","import React from \"react\";\n\nimport Layout from \"../components/Layout\";\nimport Post from \"../components/Post\";\nimport SEO from \"../components/Seo\";\n// import SideBar from \"../components/Sidebar\";\nimport Footer from \"../components/Footer\";\nimport { Row, Col } from \"reactstrap\";\nimport { HeroContainer, HeroContent } from \"../components/styles/Styled\";\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <h1>\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolores quo sequi\n      eaque mollitia id at ipsam illo et autem. Dolore tempora corporis eius\n      similique odit iusto quisquam cupiditate velit neque.\n    </h1>\n\n    <Post />\n    <HeroContainer>\n      <HeroContent>hello</HeroContent>\n    </HeroContainer>\n    <Footer />\n  </Layout>\n);\n\n// const indexQuery = graphql`\n//   query {\n//     allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n//       edges {\n//         node {\n//           id\n//           body\n//           frontmatter {\n//             title\n//             date(formatString: \"MMM Do YYYY\")\n\n//             tags\n//             image {\n//               childImageSharp {\n//                 fluid(maxWidth: 600) {\n//                   ...GatsbyImageSharpFluid\n//                 }\n//               }\n//             }\n//           }\n//           fields {\n//             slug\n//           }\n//           excerpt\n//         }\n//       }\n//     }\n//   }\n// `;\n\nexport default IndexPage;\n"],"sourceRoot":""}