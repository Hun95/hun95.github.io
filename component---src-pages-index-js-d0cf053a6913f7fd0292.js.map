{"version":3,"sources":["webpack:///./src/components/Seo.js","webpack:///./src/data/SubmenuData.js","webpack:///./src/components/Submenu.js","webpack:///./src/components/Category.js","webpack:///./src/components/Post-in-tags.js","webpack:///./src/components/Post.js","webpack:///./src/components/Banner.js","webpack:///./src/hooks/useCategory.js","webpack:///./src/pages/index.js","webpack:///./src/images/banner2.webp"],"names":["SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","submenuData","id","Submenu","SubmenuWrap","Menu","map","names","Item","key","styled","div","Category","edges","click","Wrap","category","index","Button","onClick","button","PostInTags","props","TagWrap","tag","Tag","to","Link","Post","CardWrapper","node","Card","fields","slug","CardTitle","frontmatter","CardSubTitle","subtitle","tags","CardDate","date","section","h2","p","Banner","Banwrapper","src","BannerImg","img","useCategory","initValue","tempItems","newtagsArray","categories","useState","setNode","items","Set","Array","from","handleItems","filter","IndexPage","dataForm","allMdx","Layout","Mainwrapper","module","exports"],"mappings":"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","file":"component---src-pages-index-js-d0cf053a6913f7fd0292.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","export const submenuData = [\n  {\n    id: 1,\n    name: '소식',\n  },\n  {\n    id: 2,\n    name: '클론코딩',\n  },\n\n  {\n    id: 3,\n    name: '공부하기',\n  },\n\n  {\n    id: 4,\n    name: '에러해결',\n  },\n];\n","import React from 'react';\nimport styled from 'styled-components';\nimport { submenuData } from '../data/SubmenuData';\nconst Submenu = () => {\n  return (\n    <>\n      <SubmenuWrap>\n        <Menu>\n          <p>Tool</p>\n          {submenuData.map(names => {\n            const { id, name } = names;\n            return <Item key={id}>▫ {name}</Item>;\n          })}\n        </Menu>\n      </SubmenuWrap>\n    </>\n  );\n};\n\nexport default Submenu;\n\nconst SubmenuWrap = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  position: sticky;\n  max-height: 200px;\n  margin-left: 1rem;\n  top: 100px;\n\n  bottom: 0;\n  left: 0;\n  right: 0;\n  p {\n    font-weight: bold;\n  }\n  @media only screen and (max-width: 768px) {\n    display: none;\n  }\n`;\nconst Menu = styled.div`\n  margin: 10px 10px 10px 30px;\n`;\n\nconst Item = styled.div`\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nconst Category = ({ edges, click }) => {\n  return (\n    <Wrap>\n      {edges.map((category, index) => {\n        return (\n          <Button key={index} onClick={() => click(category)}>\n            {category}\n          </Button>\n        );\n      })}\n    </Wrap>\n  );\n};\n\nexport default Category;\n\nconst Button = styled.button`\n  background-color: #ffd42a;\n  color: black;\n  font-size: 15px;\n  margin-right: 1rem;\n  border: none;\n  border-radius: 2rem;\n  padding: 1% 1%;\n  &:hover {\n    background: #fff5cc;\n  }\n`;\nconst Wrap = styled.div`\n  margin-bottom: 2rem;\n`;\n","import React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst PostInTags = ({ props }) => {\n  return (\n    <TagWrap>\n      {props.map(tag => (\n        <Tag to={`tag/${tag}`} key={tag}>\n          {tag}\n        </Tag>\n      ))}\n    </TagWrap>\n  );\n};\n\nexport default PostInTags;\n\nconst Tag = styled(Link)`\n  background-color: #ffd42a;\n\n  color: black;\n  font-size: 10px;\n\n  margin-right: 1rem;\n  border: none;\n  border-radius: 2rem;\n  padding: 1% 1%;\n  &:hover {\n    background: #fff5cc;\n  }\n`;\n\nconst TagWrap = styled.div`\n  margin-left: 30px;\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport styled from 'styled-components';\nimport PostInTags from '../components/Post-in-tags';\n\nconst Post = ({ edges }) => {\n  return (\n    <>\n      <CardWrapper>\n        {edges.map(({ node }) => (\n          <Card key={node.id}>\n            <Link to={node.fields.slug}>\n              <CardTitle>🚀{node.frontmatter.title}</CardTitle>\n              <CardSubTitle>◼ {node.frontmatter.subtitle}</CardSubTitle>\n            </Link>\n            <PostInTags props={node.frontmatter.tags} />\n            <CardDate>📆{node.frontmatter.date}</CardDate>\n          </Card>\n        ))}\n      </CardWrapper>\n    </>\n  );\n};\n\nexport default Post;\nconst CardWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-content: space-between;\n  grid-gap: 1rem;\n  padding-bottom: 1rem;\n  margin-bottom: 1rem;\n  max-width: 100%;\n\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\nconst Card = styled.section`\n  background: #ffffff;\n  display: grid;\n  grid-template-columns: repeat(2fr, 500px);\n\n  border-radius: 0 0 5px 5px;\n  box-shadow: 0 20px 10px -15px rgba(197, 192, 249, 0.2);\n  position: relative;\n  z-index: 0;\n  height: 250px;\n  width: 100%;\n\n  &:hover {\n    transition: all 0.3s ease-in-out;\n    transform: translateY(-5px);\n  }\n`;\n\nconst CardTitle = styled.h2`\n  margin-top: 1.4rem;\n  margin-bottom: 1rem;\n  text-align: left;\n  line-height: 2rem;\n  margin-left: 10px;\n  height: 30px;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  cursor: pointer;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n\n  font-weight: bold;\n`;\n\nconst CardSubTitle = styled.p`\n  margin-top: 20px;\n  text-align: left;\n  font-size: 10px;\n  height: 30px;\n  cursor: pointer;\n  margin-left: 20px;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  padding-right: 10px;\n`;\n\nconst CardDate = styled.p`\n  font-size: 5px;\n  text-align: right;\n  margin-right: 10px;\n  margin-top: 20px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport BannerImg from '../images/banner2.webp';\nconst Banner = () => {\n  return (\n    <>\n      <Banwrapper src={BannerImg}></Banwrapper>\n    </>\n  );\n};\n\nexport default Banner;\n\nconst Banwrapper = styled.img`\n  margin: 2rem 0;\n  width: 100%;\n\n  height: auto;\n`;\n","import { useState } from 'react';\nconst getTags = items => {\n  let tempItems = items.map(items => {\n    return items.node.frontmatter.category;\n  });\n  let newtagsArray = new Set(tempItems);\n  let categories = Array.from(newtagsArray);\n  categories = ['all', ...categories];\n  return categories;\n};\n\nconst useCategory = initValue => {\n  const [node, setNode] = useState(initValue);\n  const [category, setCategory] = useState(getTags(node));\n\n  const handleItems = category => {\n    let tempItems = [...initValue];\n\n    if (category === 'all') {\n      setNode(tempItems);\n    } else {\n      let items = tempItems.filter(\n        ({ node }) => node.frontmatter.category === category\n      );\n      setNode(items);\n    }\n  };\n  return { handleItems, category, node };\n};\nexport default useCategory;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Category from '../components/Category';\nimport Layout from '../components/Layout';\nimport Post from '../components/Post';\nimport SEO from '../components/Seo';\nimport Submenu from '../components/Submenu';\nimport styled from 'styled-components';\nimport Banner from '../components/Banner';\nimport useCategory from '../hooks/useCategory';\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n        edges {\n          node {\n            id\n            body\n            frontmatter {\n              title\n              subtitle\n              date(formatString: \"MMM Do YYYY\")\n              category\n              tags\n            }\n            fields {\n              slug\n            }\n            excerpt\n          }\n        }\n      }\n    }\n  `);\n  const dataForm = data.allMdx.edges;\n  const { category, node, handleItems } = useCategory(dataForm);\n\n  return (\n    <Layout>\n      <SEO title='Home' />\n      <Banner />\n      <Category edges={category} click={handleItems} />\n      <Mainwrapper>\n        <Post edges={node} />\n        <Submenu />\n      </Mainwrapper>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nconst Mainwrapper = styled.div`\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n\n  justify-content: space-between;\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n","module.exports = __webpack_public_path__ + \"static/banner2-806ee9daaaaa0a2062da02f00690d579.webp\";"],"sourceRoot":""}