{"version":3,"sources":["webpack:///./src/components/Post/style.js","webpack:///./src/components/Post/Post-in-tags.js","webpack:///./src/components/Post/index.js","webpack:///./src/components/Category/style.js","webpack:///./src/components/Category/index.js","webpack:///./src/hooks/useCategory.js","webpack:///./src/pages/blog.js"],"names":["CardWrapper","styled","div","Card","section","CardTitle","h2","CardSubTitle","p","CardDate","Tag","Link","TagWrap","PostInTags","props","map","tag","to","key","Post","edges","node","id","fields","slug","frontmatter","title","subtitle","tags","date","Button","button","Wrap","FlexBox","Category","click","center","category","index","onClick","useCategory","initValue","tempItems","newtagsArray","categories","useState","setNode","items","Set","Array","from","console","log","handleItems","filter","Blog","dataForm","useStaticQuery","allMdx","Layout","description","lang"],"mappings":"4KAGaA,EAAcC,IAAOC,IAAV,qEAAGD,CAAH,kMAUXE,EAAOF,IAAOG,QAAV,8DAAGH,CAAH,oQAkBJI,EAAYJ,IAAOK,GAAV,mEAAGL,CAAH,yPAiBTM,EAAeN,IAAOO,EAAV,sEAAGP,CAAH,qNAgBZQ,EAAWR,IAAOO,EAAV,kEAAGP,CAAH,uEASRS,EAAMT,YAAOU,QAAV,6DAAGV,CAAH,kIAaHW,EAAUX,IAAOC,IAAV,iEAAGD,CAAH,sBCxELY,EAZI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpB,OACE,kBAACF,EAAD,KACGE,EAAMC,KAAI,SAAAC,GAAG,OACZ,kBAACN,EAAD,CAAKO,GAAE,OAASD,EAAOE,IAAKF,GAA5B,IACIA,QCiBGG,EAnBF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACd,OACE,oCACE,kBAACpB,EAAD,KACGoB,EAAML,KAAI,gBAAGM,EAAH,EAAGA,KAAH,OACT,kBAAClB,EAAD,CAAMe,IAAKG,EAAKC,IACd,kBAAC,OAAD,CAAML,GAAII,EAAKE,OAAOC,MACpB,kBAACnB,EAAD,UAAcgB,EAAKI,YAAYC,OAC/B,kBAACnB,EAAD,UAAiBc,EAAKI,YAAYE,WAEpC,kBAAC,EAAD,CAAYb,MAAOO,EAAKI,YAAYG,OACpC,kBAACnB,EAAD,UAAaY,EAAKI,YAAYI,a,YCbpCC,G,UAAS7B,IAAO8B,OAAV,oEAAG9B,CAAH,uLAgBN+B,EAAO/B,IAAOC,IAAV,kEAAGD,CAAH,qMAWNgC,KCZWC,EAhBE,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAOe,EAAY,EAAZA,MACzB,OACE,oCACE,kBAACH,EAAD,CAAMI,QAAM,GACThB,EAAML,KAAI,SAACsB,EAAUC,GACpB,OACE,kBAACR,EAAD,CAAQZ,IAAKoB,EAAOC,QAAS,kBAAMJ,EAAME,KACtCA,S,YCoBAG,EAlBK,SAAAC,GAAc,IAT5BC,EAGAC,EACAC,EAK2B,EACPC,mBAASJ,GAA1BpB,EADwB,KAClByB,EADkB,OAECD,oBAX5BH,EAW6CrB,EAX3BN,KAAI,SAAAgC,GACxB,OAAOA,EAAM1B,KAAKI,YAAYY,YAE5BM,EAAe,IAAIK,IAAIN,GACvBE,EAAaK,MAAMC,KAAKP,GAC5BC,EAAU,CAAI,OAAJ,mBAAcA,MAMjBP,EAFwB,UAG/Bc,QAAQC,IAAIf,GAaZ,MAAO,CAAEgB,YAZW,SAAAhB,GAClB,IAAIK,EAAS,YAAOD,GAEpB,GAAiB,QAAbJ,EACFS,EAAQJ,OACH,CACL,IAAIK,EAAQL,EAAUY,QACpB,qBAAGjC,KAAgBI,YAAYY,WAAaA,KAE9CS,EAAQC,KAGUV,WAAUhB,SCqBnBkC,UAxCF,WACX,IAuBMC,EAvBOC,yBAAe,cAuBNC,OAAOtC,MAxBZ,EA0BuBoB,EAAYgB,GAA5CnB,EA1BS,EA0BTA,SAAUhB,EA1BD,EA0BCA,KAAMgC,EA1BP,EA0BOA,YAExB,OACE,kBAACM,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKjC,MAAM,OAAOkC,YAAY,mBAAmBC,KAAK,OACtD,kBAAC,EAAD,CAAUzC,MAAOiB,EAAUF,MAAOkB,IAElC,kBAAC,EAAD,CAAMjC,MAAOC","file":"component---src-pages-blog-js-89b43e9f67c4dd20635e.js","sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nexport const CardWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-content: space-between;\n  grid-gap: 1rem;\n\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));\n  } ;\n`;\nexport const Card = styled.section`\n  background: #ffffff;\n\n  /* border: 1px solid black; */\n  border-radius: 0 0 5px 5px;\n  text-decoration: none;\n  box-shadow: 0 20px 10px -15px rgba(197, 192, 249, 0.2);\n  height: 250px;\n  position: relative;\n  z-index: 2;\n  &:hover {\n    transition: all 0.3s ease-in-out;\n    transform: translateY(-5px);\n    position: relative;\n    z-index: 2;\n  }\n`;\n\nexport const CardTitle = styled.h2`\n  margin-top: 1.4rem;\n  color: black;\n  font-size: 23px;\n  margin-bottom: 1rem;\n  text-align: left;\n  line-height: 2rem;\n  margin-left: 10px;\n  height: 30px;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  cursor: pointer;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  font-weight: bold;\n`;\n\nexport const CardSubTitle = styled.p`\n  margin-top: 40px;\n  text-align: left;\n  color: black;\n  font-size: 15px;\n  height: 20px;\n\n  cursor: pointer;\n  margin-left: 20px;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  padding-right: 10px;\n`;\n\nexport const CardDate = styled.p`\n  font-size: 8px;\n  text-align: right;\n  margin-right: 10px;\n  margin-top: 40px;\n`;\n\n/* Tag */\n\nexport const Tag = styled(Link)`\n  color: black;\n  font-size: 13px;\n  margin-left: 20px;\n  text-decoration: none;\n  border: none;\n  border-radius: 2rem;\n\n  &:hover {\n    background: #fff5cc;\n  }\n`;\n\nexport const TagWrap = styled.div`\n  margin-top: 40px;\n`;\n","import React from 'react';\nimport { Tag, TagWrap } from './style';\nconst PostInTags = ({ props }) => {\n  return (\n    <TagWrap>\n      {props.map(tag => (\n        <Tag to={`tag/${tag}`} key={tag}>\n          #{tag}\n        </Tag>\n      ))}\n    </TagWrap>\n  );\n};\n\nexport default PostInTags;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { CardWrapper, Card, CardTitle, CardSubTitle, CardDate } from './style';\nimport PostInTags from './Post-in-tags';\n\nconst Post = ({ edges }) => {\n  return (\n    <>\n      <CardWrapper>\n        {edges.map(({ node }) => (\n          <Card key={node.id}>\n            <Link to={node.fields.slug}>\n              <CardTitle>ðŸš€{node.frontmatter.title}</CardTitle>\n              <CardSubTitle>â—¼ {node.frontmatter.subtitle}</CardSubTitle>\n            </Link>\n            <PostInTags props={node.frontmatter.tags} />\n            <CardDate>ðŸ“†{node.frontmatter.date}</CardDate>\n          </Card>\n        ))}\n      </CardWrapper>\n    </>\n  );\n};\n\nexport default Post;\n","import styled from 'styled-components';\nimport { FlexBox } from '../Global/Styled';\nimport { breakDown } from '../Global/Theme';\nconst Button = styled.button`\n  background-color: #ffd42a;\n  color: black;\n  font-size: 15px;\n  margin-right: 1rem;\n  border: none;\n  border-radius: 2rem;\n  padding: 1% 1%;\n\n  text-align: center;\n  min-width: 4rem;\n\n  &:hover {\n    background: #fff5cc;\n  }\n`;\nconst Wrap = styled.div`\n  margin-bottom: 2rem;\n  background: #fafafa;\n\n  padding: 1rem;\n\n  border: 2px solid #e6e6e6;\n  border-radius: 1rem;\n  overflow-x: auto;\n  height: auto;\n  white-space: nowrap;\n  ${FlexBox}\n\n  &::-webkit-scrollbar {\n    display: none !important;\n  }\n`;\n\nexport { Button, Wrap };\n","import React from 'react';\nimport { Wrap, Button } from './style';\nconst Category = ({ edges, click }) => {\n  return (\n    <>\n      <Wrap center>\n        {edges.map((category, index) => {\n          return (\n            <Button key={index} onClick={() => click(category)}>\n              {category}\n            </Button>\n          );\n        })}\n      </Wrap>\n    </>\n  );\n};\n\nexport default Category;\n","import { useState } from 'react';\nconst getTags = items => {\n  let tempItems = items.map(items => {\n    return items.node.frontmatter.category;\n  });\n  let newtagsArray = new Set(tempItems);\n  let categories = Array.from(newtagsArray);\n  categories = ['All', ...categories];\n  return categories;\n};\n\nconst useCategory = initValue => {\n  const [node, setNode] = useState(initValue);\n  const [category, setCategory] = useState(getTags(node));\n  console.log(category);\n  const handleItems = category => {\n    let tempItems = [...initValue];\n\n    if (category === 'All') {\n      setNode(tempItems);\n    } else {\n      let items = tempItems.filter(\n        ({ node }) => node.frontmatter.category === category\n      );\n      setNode(items);\n    }\n  };\n  return { handleItems, category, node };\n};\nexport default useCategory;\n","import React from 'react';\nimport Layout from '../components/Layout/';\nimport SEO from '../components/Seo';\nimport Post from '../components/Post/';\nimport Category from '../components/Category';\nimport useCategory from '../hooks/useCategory';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { PageWrapper } from '../components/Global/Styled';\nconst Blog = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n        edges {\n          node {\n            id\n            body\n            frontmatter {\n              title\n              subtitle\n              date(formatString: \"MMM Do YYYY\")\n              category\n              tags\n            }\n            fields {\n              slug\n            }\n            excerpt\n          }\n        }\n      }\n    }\n  `);\n  const dataForm = data.allMdx.edges;\n\n  const { category, node, handleItems } = useCategory(dataForm);\n\n  return (\n    <Layout>\n      <PageWrapper>\n        <SEO title='Blog' description='welocome to Blog' lang='ko' />\n        <Category edges={category} click={handleItems} />\n\n        <Post edges={node} />\n      </PageWrapper>\n    </Layout>\n  );\n};\n\nexport default Blog;\n"],"sourceRoot":""}